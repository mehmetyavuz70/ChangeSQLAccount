[System.Reflection.Assembly]::LoadWithPartialName(“Microsoft.SqlServer.SqlWmiManagement”) | out-null
[reflection.assembly]::LoadWithPartialName("Microsoft.SqlServer.Smo") | out-null

$UName=”DOMAIN\Account” #it doesn't have to be a domain account
$PWord=”Password”


$serverlist = Get-Content C:\Script\serverlist.txt

foreach($server in $serverlist)
{

$SMOWmiserver = New-Object (‘Microsoft.SqlServer.Management.Smo.Wmi.ManagedComputer’) $server 
 
#$SMOWmiserver.Services | select name, type, ServiceAccount, DisplayName, Properties, StartMode, StartupParameters | out-null
$SMOWmiserver.Services | select name, ServiceAccount | where {$_.ServiceAccount -eq $UName} | select name -ExpandProperty name > servisler_tmp.txt

$servicelist = Get-Content C:\Script\servisler_tmp.txt

foreach($servicename in $servicelist)
{

$ChangeServiceMSSQL=$SMOWmiserver.Services | where {$_.name -like $servicename} #Make sure this is what you want changed!

 
Write-Host "Stopping service" $ChangeServiceMSSQL.name "on server:" $SMOWmiserver.Name

$ChangeServiceMSSQL.Stop()
$ChangeServiceMSSQL.Refresh()

while ($ChangeServiceMSSQL.ServiceState -ne "Stopped") {
    $ChangeServiceMSSQL.Refresh()
    Start-Sleep -Seconds 1.5
    Write-Host "..."
}

Write-Host "Service stopped."
Write-Host "Changing Account for service" $ChangeServiceMSSQL.name "on server:" $SMOWmiserver.Name

#degisikligin yapildigi yer
$ChangeServiceMSSQL.SetServiceAccount($UName, $PWord)

Write-Host "Account changed." -BackgroundColor blue -ForegroundColor White

Write-Host "Beklemeye geçiyor 10 sec."

Start-Sleep -Seconds 10

Write-Host "Bekleme bitti."

Write-Host "Starting service" $ChangeServiceMSSQL.name "on server:" $SMOWmiserver.Name

 
$ChangeServiceMSSQL.start()

while ($ChangeServiceMSSQL.ServiceState -ne "Running") {
    $ChangeServiceMSSQL.Refresh()
    Start-Sleep -Seconds 1.5
    Write-Host "..."
}

Write-Host "Service started." $ChangeServiceMSSQL.name "on server:" $SMOWmiserver.Name -BackgroundColor green -ForegroundColor White

}
}
